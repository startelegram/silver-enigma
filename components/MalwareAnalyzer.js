import React, { useState, useEffect } from 'react';
import { Box, Button, Container, Typography, TextField, Paper, Grid, CircularProgress, Alert } from '@mui/material';
import { CloudUpload, Security, BugReport, Code, CheckCircle } from '@mui/icons-material';

const MalwareAnalyzer = () => {
  const [file, setFile] = useState(null);
  const [fileName, setFileName] = useState('');
  const [analyzing, setAnalyzing] = useState(false);
  const [results, setResults] = useState(null);
  const [error, setError] = useState('');
  
  const handleFileChange = (event) => {
    const selectedFile = event.target.files[0];
    if (selectedFile) {
      setFile(selectedFile);
      setFileName(selectedFile.name);
      setError('');
      setResults(null);
    }
  };
  
  const handleDrop = (event) => {
    event.preventDefault();
    const droppedFile = event.dataTransfer.files[0];
    if (droppedFile) {
      setFile(droppedFile);
      setFileName(droppedFile.name);
      setError('');
      setResults(null);
    }
  };
  
  const handleDragOver = (event) => {
    event.preventDefault();
  };
  
  const handleAnalyze = async () => {
    if (!file) {
      setError('الرجاء تحميل ملف للتحليل');
      return;
    }
    
    setAnalyzing(true);
    setError('');
    
    // Create form data for file upload
    const formData = new FormData();
    formData.append('file', file);
    
    try {
      // This would be replaced with your actual API endpoint
      const response = await fetch('/api/analyze-malware', {
        method: 'POST',
        body: formData,
      });
      
      if (!response.ok) {
        throw new Error('فشل تحليل الملف');
      }
      
      const data = await response.json();
      setResults(data);
    } catch (err) {
      setError(err.message || 'حدث خطأ أثناء تحليل الملف');
    } finally {
      setAnalyzing(false);
    }
  };
  
  const renderResults = () => {
    if (!results) return null;
    
    return (
      <Paper elevation={3} sx={{ p: 3, mt: 4 }}>
        <Typography variant="h5" gutterBottom sx={{ color: 'primary.main', fontWeight: 'bold' }}>
          نتائج التحليل
        </Typography>
        
        <Grid container spacing={3} sx={{ mt: 2 }}>
          <Grid item xs={12} md={6}>
            <Paper elevation={2} sx={{ p: 2, bgcolor: results.threatLevel > 7 ? '#ffebee' : results.threatLevel > 4 ? '#fff8e1' : '#e8f5e9' }}>
              <Typography variant="h6" gutterBottom>
                مستوى التهديد: {results.threatLevel}/10
              </Typography>
              <Typography variant="body1">
                {results.threatLevel > 7 ? 'خطر مرتفع' : results.threatLevel > 4 ? 'خطر متوسط' : 'خطر منخفض'}
              </Typography>
            </Paper>
          </Grid>
          
          <Grid item xs={12} md={6}>
            <Paper elevation={2} sx={{ p: 2 }}>
              <Typography variant="h6" gutterBottom>
                نوع البرمجية الخبيثة
              </Typography>
              <Typography variant="body1">
                {results.malwareType || 'غير معروف'}
              </Typography>
            </Paper>
          </Grid>
          
          <Grid item xs={12}>
            <Paper elevation={2} sx={{ p: 2 }}>
              <Typography variant="h6" gutterBottom>
                التفاصيل
              </Typography>
              <Typography variant="body1" component="div">
                <ul>
                  {results.details.map((detail, index) => (
                    <li key={index}>{detail}</li>
                  ))}
                </ul>
              </Typography>
            </Paper>
          </Grid>
          
          {results.signatures && (
            <Grid item xs={12}>
              <Paper elevation={2} sx={{ p: 2 }}>
                <Typography variant="h6" gutterBottom>
                  التوقيعات المكتشفة
                </Typography>
                <Box sx={{ maxHeight: '200px', overflowY: 'auto' }}>
                  {results.signatures.map((sig, index) => (
                    <Alert key={index} severity={sig.severity} sx={{ mb: 1 }}>
                      {sig.name}: {sig.description}
                    </Alert>
                  ))}
                </Box>
              </Paper>
            </Grid>
          )}
          
          <Grid item xs={12}>
            <Paper elevation={2} sx={{ p: 2 }}>
              <Typography variant="h6" gutterBottom>
                التوصيات
              </Typography>
              <Typography variant="body1" component="div">
                <ul>
                  {results.recommendations.map((rec, index) => (
                    <li key={index}>{rec}</li>
                  ))}
                </ul>
              </Typography>
            </Paper>
          </Grid>
        </Grid>
      </Paper>
    );
  };
  
  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      <Typography variant="h4" component="h1" gutterBottom align="center" sx={{ fontWeight: 'bold', mb: 4 }}>
        محلل البرمجيات الخبيثة
      </Typography>
      
      <Paper 
        elevation={3} 
        sx={{ 
          p: 4, 
          textAlign: 'center',
          border: '2px dashed #ccc',
          bgcolor: '#f9f9f9',
          cursor: 'pointer'
        }}
        onDrop={handleDrop}
        onDragOver={handleDragOver}
      >
        <CloudUpload sx={{ fontSize: 60, color: 'primary.main', mb: 2 }} />
        
        <Typography variant="h6" gutterBottom>
          قم بسحب وإفلات الملف هنا أو
        </Typography>
        
        <Button
          component="label"
          variant="contained"
          startIcon={<CloudUpload />}
          sx={{ mt: 2 }}
        >
          اختر ملفًا
          <input
            type="file"
            hidden
            onChange={handleFileChange}
          />
        </Button>
        
        {fileName && (
          <Typography variant="body1" sx={{ mt: 2 }}>
            الملف المحدد: {fileName}
          </Typography>
        )}
      </Paper>
      
      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>
        <Button
          variant="contained"
          color="primary"
          size="large"
          startIcon={analyzing ? <CircularProgress size={20} color="inherit" /> : <Security />}
          onClick={handleAnalyze}
          disabled={!file || analyzing}
          sx={{ px: 4, py: 1.5 }}
        >
          {analyzing ? 'جاري التحليل...' : 'تحليل الملف'}
        </Button>
      </Box>
      
      {error && (
        <Alert severity="error" sx={{ mt: 3 }}>
          {error}
        </Alert>
      )}
      
      {renderResults()}
      
      <Box sx={{ mt: 6, p: 3, bgcolor: '#f5f5f5', borderRadius: 2 }}>
        <Typography variant="h5" gutterBottom sx={{ color: 'primary.main', fontWeight: 'bold' }}>
          كيف يعمل محلل البرمجيات الخبيثة؟
        </Typography>
        
        <Grid container spacing={3} sx={{ mt: 2 }}>
          <Grid item xs={12} md={4}>
            <Box sx={{ textAlign: 'center', p: 2 }}>
              <BugReport sx={{ fontSize: 40, color: 'primary.main', mb: 1 }} />
              <Typography variant="h6" gutterBottom>
                تحليل سلوكي
              </Typography>
              <Typography variant="body2">
                يقوم المحلل بفحص سلوك الملف في بيئة افتراضية آمنة للكشف عن الأنشطة المشبوهة.
              </Typography>
            </Box>
          </Grid>
          
          <Grid item xs={12} md={4}>
            <Box sx={{ textAlign: 'center', p: 2 }}>
              <Code sx={{ fontSize: 40, color: 'primary.main', mb: 1 }} />
              <Typography variant="h6" gutterBottom>
                تحليل ثابت
              </Typography>
              <Typography variant="body2">
                فحص شامل لشفرة الملف للكشف عن التوقيعات المعروفة والتقنيات المستخدمة في البرمجيات الخبيثة.
              </Typography>
            </Box>
          </Grid>
          
          <Grid item xs={12} md={4}>
            <Box sx={{ textAlign: 'center', p: 2 }}>
              <CheckCircle sx={{ fontSize: 40, color: 'primary.main', mb: 1 }} />
              <Typography variant="h6" gutterBottom>
                تقييم المخاطر
              </Typography>
              <Typography variant="body2">
                تقييم شامل لمستوى التهديد وتقديم توصيات للتعامل مع الملف بناءً على نتائج التحليل.
              </Typography>
            </Box>
          </Grid>
        </Grid>
      </Box>
    </Container>
  );
};

export default MalwareAnalyzer;